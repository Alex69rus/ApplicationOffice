@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Web

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        Здавствуйте, @context.User.Identity?.Name!
        @* <MatButton Icon="settings" OnClick="@BeginSignOut"/> *@
        <MatButton Icon="settings" OnClick="@OnClick" RefBack="@_buttonForwardRef"></MatButton>
        <MatMenu @ref="_menu" TargetForwardRef="@_buttonForwardRef">
            <MatList>
                <MatListItem OnClick="@BeginChangePassword">Смена пароля</MatListItem>
            </MatList>
        </MatMenu>
        <MatButton OnClick="@BeginSignOut" Label="Выход"/>
        @* <button class="nav-link btn btn-link" @onclick="BeginSignOut">Выход</button> *@
    </Authorized>
    <NotAuthorized>
        <MatButtonLink Href="authentication/login">Войти</MatButtonLink>
        @* <a href="authentication/login">Войти</a> *@
    </NotAuthorized>
</AuthorizeView>

@code{

    private ForwardRef _buttonForwardRef = new();
    private BaseMatMenu _menu = default!;

    public void OnClick(MouseEventArgs e)
    {
        _menu.OpenAsync();
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private async Task BeginChangePassword(MouseEventArgs args)
    {
        await Task.Yield();
        Navigation.NavigateTo($"https://localhost:5000/Account/ChangePassword?backUrl={HttpUtility.UrlEncode(Navigation.Uri)}");
    }

}
